Рефлексия (работа над ошибками по предыдущему занятию):

4.1.
Понял композицию, как родительский класс, в котором хранятся универсальные интерфейсы обработки для экземпляров подклассов.

Для лучшего понимания прогнал пошагово разбор задания: обнаружил опечатку в методе "start_work" - после "return" написано "seld" вместо "self".

Добавляю свой вариант:
https://github.com/Sweetr-feelin/py_study1/blob/main/task5.py

4.2.
Массив строил более сложно - объясню тем, что random тут возвращает всегда одинаковую последовательность цифр, от чего я попытался немного уйти. Можно было бы усложнить реализацию для получения более случайных чисел, но не стал этого делать.

Также составлял массив из случайных имен, а не только номеров - подумал, что так будет больше соответствовать заданию.

Возможно неверно, что вывод сделал в том же цикле, но я решил, что два одинаковых цикла будет лишним... Также, учитывая ограничение по количеству шагов в Python Tutor, это позволило мне сразу получать результат, а не переходить для выполнения в отдельную среду.

4.3.
Про ad hoc полиморфизм надо ещё поразмышлять.

Текущее задание

Ссылку на отчёт на гитхабе в формате md: https://github.com/Sweetr-feelin/Sweetr-feelin/blob/main/README.md

Скриншот вывода программы в консоль: https://github.com/Sweetr-feelin/py_study1/blob/main/image.png
